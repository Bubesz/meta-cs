namespace CalculatorNs
{
	exception MathFault
	{
		int ErrorCode;
		string ErrorMessage;
	}

	struct Complex
	{
		double Re;
		double Im;
	}

	database ComplexDB
	{
		entity Complex;
	}

	interface ICalculator
	{
		double Add(double left, double right);
		double Subtract(double left, double right);
		double Multiply(double left, double right);
		double Divide(double left, double right) throws MathFault;
		Complex ComplexAdd(Complex left, Complex right);
		void Hello(string message);
		oneway HelloOneway(string msg);
	}

	component CalcComp1
	{
		service ICalculator CalcS;
		reference ICalculator CalcR;
	}

	component CalcComp2
	{
		service ICalculator;
		reference ICalculator CalcR;
	}

	component CalcComp3
	{
		service ICalculator CalcS;
		reference ICalculator;
	}

	component CalcComp4
	{
		service ICalculator;
		reference ICalculator;
	}

	component CalcComp5
	{
		service ICalculator;
	}

	component CalcComp6
	{
		reference ICalculator;
	}

	composite Composite1 
	{
		service ICalculator CS;
		reference ICalculator CR;
		component CalcComp1;
		component CalcComp2;
		component CalcComp5;
		component CalcComp6;
		//wire CS to CalcComp1.CalcS;
		//wire CalcComp1.CalcR to CalcComp2.ICalculator;
		//wire CalcComp2.ICalculator to CR;
		wire CalcComp5.ICalculator to CalcComp6.ICalculator;
	}

	binding SoapHttp
	{
		transport HTTP;
		encoding SOAP;
		protocol WsAddressing;
	}

	endpoint Calculator : ICalculator
	{
		binding SoapHttp;
		address "http://localhost/Calculator";
	}
}